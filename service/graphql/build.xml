<?xml version="1.0" encoding="UTF-8"?>
<project name="graphql" default="war" basedir=".">

    <property file="build.properties" />
    <property file="${component.home}/environment.properties" />
    <property file="${component.home}/build.properties" />

    <path id="build.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${build.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${build.dir}/jars/echothree-client.jar" />
    </path>

    <path id="shared.class.path">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement path="${java.class.path}" />
    </path>

    <target name="prepare">
        <mkdir dir="${service.graphql.classbindir}" />
        <mkdir dir="${service.graphql.wardir}" />
    </target>
 
    <target name="compile" depends="prepare">
        <parallel>
            <javac
                debug="on"
                source="1.8"
                target="1.8"
                srcdir="${service.graphql.javasrc}"
                destdir="${service.graphql.classbindir}"
                includeAntRuntime="true"
                classpathref="build.classpath" >
                <compilerarg value="-Xlint:-options" />
                <!-- <compilerarg value="-Xlint:deprecation" /> -->
                <!-- <compilerarg value="-Xlint:unchecked" /> -->
            </javac>
        </parallel>
    </target>

    <target name="war" depends="compile">
        <war
            warfile="${service.graphql.warfile}"
            webxml="${service.graphql.metadatasrc}/web.xml">
            <classes dir="${service.graphql.classbindir}" />
            <classes dir="${service.graphql.javasrc}">
                <include name="**/*.properties" />
            </classes>
            <!-- Echo Three -->
            <lib dir="${component.home}/build/jars">
                <include name="echothree-client.jar" />
            </lib>
            <!-- Google Guava -->
            <lib dir="${build.lib.dir}">
                <include name="guava.jar"/>
            </lib>
        </war>
    </target>

    <target name="deploy" depends="war">
        <copy file="${service.graphql.warfile}" todir="../${wildfly.home.deploy}" />
    </target>

    <target name="clean">
        <delete dir="${service.graphql.builddir}" />
    </target>

</project>

